const projects = [
    {
        id: 1,
        title: "Simple Web Page",
        description: "MERN Intro",
        long_description: "Just a simple web page",
        technologies: "An explanation of the technologies used, including one or more technical challenges you solved.",
        contributions: "Explanation of your particular contributions.",
        image: "../../images/project_icon.png",
        link: "/project/1",
        github: 'https://github.com/WSPineda/CS3750-Portfolio/tree/main/project1',
    },
    {
        id: 2,
        title: "Node/Express",
        description: "Learning E and N of MERN",
        long_description: "Goal: Practice Node and Express in preparation for upcoming React assignments.",
        technologies: "An explanation of the technologies used, including one or more technical challenges you solved.",
        contributions: "Explanation of your particular contributions.",
        image: "../../images/project_icon.png",
        link: "/project/2",
        github: 'https://github.com/WSPineda/CS3750-Portfolio/tree/main/project2',    },
    {
        id: 3,
        title: "Mongo and RESTful API",
        description: "Created a Node/Express/Mongo backend website.",
        long_description: "Create a Node/Express/Mongo backend website. The purpose is to have a site which has a user account/login system as well as a checking account and a savings account tracker. Create all the necessary routes that a later front end can use. All routes must accept JSON and/or return JSON. Plain text input or output is not allowed. All RESTful routs should be either GET or POST (we can avoid PUTs and DELETEs for now to help with testing.) Use GET if data is only being requested without any kind of query, such as display all users. Use POST if data is being sent to narrow down the query (most of these upcoming routes will use POST.) ",
        technologies: "An explanation of the technologies used, including one or more technical challenges you solved.",
        contributions: "Explanation of your particular contributions.",
        image: "../../images/project_icon.png",
        link: "/project/3",
        github: 'https://github.com/WSPineda/CS3750-Portfolio/tree/main/project3',    },
    {
        id: 4,
        title: "MERN and Sessions",
        description: "Short project description",
        long_description: "Each project should have about a full page of description for the project",
        technologies: "An explanation of the technologies used, including one or more technical challenges you solved.",
        contributions: "Explanation of your particular contributions.",
        image: "../../images/project_icon.png",
        link: "/project/4",
        github: 'https://github.com/WSPineda/CS3750-Portfolio/tree/main/project4',    },
    {
        id: 5,
        title: "Hangman Game",
        description: "Created by a small group",
        long_description: "Each project should have about a full page of description for the project",
        technologies: "In this project, I utilized the MERN stack, which includes MongoDB, Express.js, React.js, and Node.js, to build a robust and dynamic web application. MongoDB served as the NoSQL database, offering flexibility in data storage and easy scalability. Express.js and Node.js provided a strong backend foundation, enabling me to create RESTful APIs and manage server-side operations effectively. On the frontend, React.js was instrumental in developing a highly interactive and responsive user interface, leveraging components to build a seamless user experience. Bootstrap was integrated for styling, ensuring a modern, clean, and mobile-responsive design throughout the application.",
        contributions: "In our Hangman game project, my primary contribution was focused on enhancing the user experience through careful formatting and visual design. I worked on the layout and placement of the letters, ensuring that they were displayed in a clear and intuitive manner for the players. This involved designing a responsive grid that neatly arranged the letters, making it easy for users to see which ones they had guessed correctly and which ones were still hidden. Additionally, I was responsible for the progression of the hangman image, which changed dynamically with each wrong guess. I implemented a system that visually represented the user's mistakes by gradually revealing parts of the hangman figure, adding an engaging and suspenseful element to the game. This not only improved the aesthetic appeal but also enhanced the overall gameplay experience by providing clear and immediate feedback to the users.",
        image: "../../images/project_icon.png",
        link: "/project/5",
        github: 'https://github.com/WSPineda/CS3750-Portfolio/tree/main/project5',    },
    {
        id: 6,
        title: "Banking Application",
        description: "In this banking application project, we developed a MERN stack platform that enables users to manage their savings, checking, and investment accounts, including internal and external transfers, with secure authentication and detailed transaction tracking.",
        long_description: "The banking application we developed is a full-featured platform built using the MERN stackâ€”MongoDB, Express.js, React.js, and Node.js. The application allows users to manage multiple account types, including savings, checking, and investment accounts, with functionality to perform both internal and external transfers. One of the key features is the robust user authentication system, which ensures secure access and data protection. We also implemented detailed transaction tracking, where every deposit, withdrawal, and transfer is stored in a database with all relevant details, such as account types, dates, and transaction amounts. A major part of the project involved creating a user-friendly interface with React, enabling users to easily navigate through their accounts and perform transactions. For internal transfers, we added validation rules to prevent users from selecting the same account for both the from and to options. The backend was designed to handle complex operations, including hashing passwords for security, and allowing admins to view and manage user accounts. This project not only showcases our technical skills in building a complex application but also my ability to design and implement secure and efficient banking solutions",
        technologies: "In this project, we employed a range of modern technologies to build a robust and scalable application. The core of the application is powered by the MERN stack, which includes MongoDB for flexible and scalable data storage, Express.js for handling server-side logic and routing, React.js for creating a dynamic and responsive user interface, and Node.js for building the backend services. Bootstrap was utilized to ensure a clean and professional design, providing responsive and visually appealing components. Additionally, Redux was implemented for efficient state management across complex interactions, while SHA-256 hashing was used to secure user passwords, ensuring robust security measures. The integration of these technologies facilitated the development of a user-friendly, secure, and high-performance application.",
        contributions: "In this project, I played a pivotal role in several key areas, including authentication, redirection, transfers, and account management. I developed and implemented the authentication system, ensuring secure user logins and registrations while protecting sensitive information. To enhance user experience, I integrated seamless redirection capabilities, guiding users intuitively through the application. I also engineered the transfer functionality, allowing users to efficiently manage and execute both internal and external transfers between accounts. Additionally, I contributed to the development of account management features, enabling users to view and edit their account details with ease. My efforts ensured a cohesive and secure experience, addressing both user needs and application functionality effectively",
        image: "../../images/project_icon.png",
        link: "/project/6",
        github: 'https://github.com/WSPineda/CS3750-Portfolio/tree/main/project6',    },

];

export default projects;